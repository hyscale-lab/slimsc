--- Chain 7 for Question 21 ---
Status: USED_FOR_VOTING
Finish Reason (Model): stop
Extracted Answer: 121
Prompt Tokens (Usage): 165
Completion Tokens (Usage): 16679
Reasoning Tokens (Counted): 16112
Non-Reasoning Tokens (Counted): 565
Total Tokens (Usage): N/A

--- Reasoning Content ---
Okay, so I'm trying to solve this problem where I need to find the smallest integer base b (where b is at least 2) such that there are more than ten b-eautiful numbers. A b-eautiful number is a two-digit number in base b, and the sum of its two digits equals the square root of the number itself.

Let me try to break this down. First, let's understand what a two-digit number in base b represents. In base b, a two-digit number would be something like "d1 d0", where d1 is the digit in the b's place and d0 is the digit in the units place. So, the value of this number in decimal would be d1 * b + d0.

The problem states that the sum of the two digits, d1 + d0, must equal the square root of the number. So, sqrt(d1 * b + d0) = d1 + d0. Since we're dealing with integers, sqrt(d1 * b + d0) must also be an integer, which implies that d1 * b + d0 must be a perfect square.

Let me denote S = d1 + d0. So from the equation, we have sqrt(n) = S, which means n = S^2. But n is also equal to d1 * b + d0. So, d1 * b + d0 = S^2. But since S = d1 + d0, we can write d1 * b + d0 = (d1 + d0)^2.

Let me rewrite that equation: d1 * b + d0 = (d1 + d0)^2. Let's expand the right side: (d1)^2 + 2*d1*d0 + (d0)^2. So the equation becomes d1*b + d0 = d1^2 + 2*d1*d0 + d0^2.

Bringing everything to one side: d1^2 + 2*d1*d0 + d0^2 - d1*b - d0 = 0.

Hmm, that looks a bit complicated. Maybe I can rearrange terms differently. Let me think. Let's express b from the equation. Starting again from d1*b + d0 = (d1 + d0)^2.

So, d1*b = (d1 + d0)^2 - d0. Therefore, b = [(d1 + d0)^2 - d0] / d1.

But d1 and d0 are digits in base b, so they must satisfy 0 <= d0 < b and 0 <= d1 < b. Also, since it's a two-digit number, d1 cannot be zero; otherwise, it would be a single-digit number. So, d1 is between 1 and b-1, and d0 is between 0 and b-1.

Let me define S = d1 + d0. Then, the equation becomes b = (S^2 - d0) / d1. But since S = d1 + d0, we can express d0 as S - d1. Substituting that into the equation for b:

b = [S^2 - (S - d1)] / d1 = [S^2 - S + d1] / d1.

Let me simplify that: numerator is S^2 - S + d1, denominator is d1. So, b = (S^2 - S)/d1 + 1.

Hmm, that might be a helpful way to write it. So, b must be equal to (S^2 - S)/d1 + 1, which is an integer because b is an integer.

Since d1 and d0 are digits in base b, d1 can range from 1 to b-1, and d0 can range from 0 to b-1. Also, S = d1 + d0, so S can range from 1 (when d1=1, d0=0) up to (b-1) + (b-1) = 2b - 2.

But since S is the square root of n, which is at least 1 (since n is a positive integer), and n is a two-digit number in base b, which is at least b (since the smallest two-digit number is 10_b = b in decimal). So S must be at least sqrt(b). But more importantly, since n = S^2, and n is a two-digit number in base b, n must be less than b^2. So, S^2 < b^2 → S < b. So, S is an integer less than b. So, S can be from 1 up to b-1.

Wait, but S is equal to d1 + d0. Since d1 is at least 1 and d0 is at least 0, S is at least 1. The maximum S is (b-1) + (b-1) = 2b - 2, but since S must be less than b, as per n = S^2 < b^2, we have S < b. So, 2b - 2 < b → b < 2. But b is at least 2, so this can't be. Hmm, maybe I made a mistake here.

Wait, n is a two-digit number in base b, so n is between b (10_b) and b^2 - 1 (which is (b-1)(b-1)_b). So, n is in [b, b^2 - 1]. Then, sqrt(n) is in [sqrt(b), sqrt(b^2 -1)]. So sqrt(b) is less than sqrt(n) less than b.

But S is sqrt(n), so S must be an integer in [ceil(sqrt(b)), b-1]. Because sqrt(b^2 - 1) is less than b.

So S can take integer values from ceil(sqrt(b)) up to b-1.

Now, let's get back to the equation for b:

b = (S^2 - S)/d1 + 1.

Since S and d1 are integers, (S^2 - S) must be divisible by d1. So, d1 must be a divisor of (S^2 - S). Also, since d1 is a digit in base b, d1 must be less than b.

But from the equation, b is expressed in terms of S and d1. So for each S, we can find possible d1's that divide (S^2 - S), and then compute b accordingly.

But since b must be greater than d1 (because d1 is a digit in base b, so d1 < b), the expression (S^2 - S)/d1 + 1 must be greater than d1.

So, let's think about how we can approach this. For each possible base b, we can look for all two-digit numbers in base b, check if their digits sum to the square root of the number, and count how many such numbers exist. We need to find the smallest b where this count exceeds 10.

But trying this for each base starting from 2 upwards might be time-consuming. Instead, perhaps we can find a formula or a pattern that allows us to compute the number of b-eautiful numbers for a given b, and then find the smallest b where this number is more than 10.

So, given b, how many b-eautiful numbers are there? Let's think.

Each b-eautiful number corresponds to a pair (d1, d0) such that:

1. d1 is between 1 and b-1.
2. d0 is between 0 and b-1.
3. d1 + d0 = S, where S = sqrt(d1*b + d0).

But S is an integer, so d1*b + d0 must be a perfect square, and S = sqrt(d1*b + d0).

From earlier, we have:

d1*b + d0 = S^2.

And since S = d1 + d0, we can write:

d1*b + d0 = (d1 + d0)^2.

Let me rearrange this equation:

(d1 + d0)^2 - d1*b - d0 = 0.

Let me think about this as a quadratic equation in terms of d0:

(d0)^2 + (2*d1 - 1)*d0 + (d1^2 - d1*b) = 0.

Wait, that might not be the easiest way. Alternatively, let's consider that for each S, which ranges from ceil(sqrt(b)) to b-1, we can find possible d1 and d0 such that d1 + d0 = S and d1*b + d0 = S^2.

So, for each S, d0 = S - d1. Substituting into the second equation:

d1*b + (S - d1) = S^2.

Simplify:

d1*b + S - d1 = S^2 → d1*(b - 1) + S = S^2 → d1*(b - 1) = S^2 - S.

So, d1 = (S^2 - S)/(b - 1).

But d1 must be an integer between 1 and b-1. So, (S^2 - S) must be divisible by (b - 1), and the result must be an integer d1 in [1, b-1].

Wait, but earlier I had an expression for b in terms of S and d1. Let me check:

From d1*(b - 1) = S^2 - S → b = (S^2 - S)/d1 + 1.

Wait, that seems consistent.

So, for a given S, d1 must satisfy that (S^2 - S) is divisible by d1, and that d1 is at least 1 and at most b-1. But since b is expressed in terms of S and d1, we can think of it as for each S, we can find possible d1's that divide (S^2 - S), then compute b and check if d1 < b.

But perhaps it's better to fix S and find the possible d1, then from that, get b. Then, for each S, how many d1's are possible such that (S^2 - S) is divisible by d1, and d1 is less than b.

But I think this is getting a bit tangled. Maybe I should approach this differently.

Let me consider that for each S, the number of possible d1's is equal to the number of divisors d1 of (S^2 - S) such that d1 divides (S^2 - S) and 1 ≤ d1 ≤ (S^2 - S)/(d1 + 1). Hmm, not sure.

Alternatively, perhaps for each S, the number of possible d1's is equal to the number of divisors of (S^2 - S) that are less than or equal to (S^2 - S)/d1.

Wait, maybe I'm overcomplicating. Let's try to think of it step by step.

For a given base b, we can iterate over S from ceil(sqrt(b)) to b-1. For each S, we can compute how many pairs (d1, d0) satisfy:

d1 + d0 = S,

d1*b + d0 = S^2.

From these, we can solve for d1 and d0.

From d0 = S - d1,

Substitute into the second equation:

d1*b + (S - d1) = S^2 → d1*(b - 1) + S = S^2 → d1 = (S^2 - S)/(b - 1).

So, for each S, d1 must equal (S^2 - S)/(b - 1). Since d1 must be an integer between 1 and b-1, (S^2 - S) must be divisible by (b - 1), and the result must be an integer between 1 and b-1.

So, for each S, (S^2 - S) must be divisible by (b - 1), and d1 = (S^2 - S)/(b - 1) must be between 1 and b-1.

So, for a given b, the number of b-eautiful numbers is equal to the number of S in [ceil(sqrt(b)), b-1] such that (S^2 - S) is divisible by (b - 1), and d1 = (S^2 - S)/(b - 1) is between 1 and b-1.

But since d1 must be at least 1, we have (S^2 - S)/(b - 1) ≥ 1 → S^2 - S ≥ b - 1.

But S is at least ceil(sqrt(b)), so maybe we can find a relationship between S and b.

Alternatively, perhaps for each b, let's compute the number of such S values that satisfy the conditions.

But I'm not sure if that's the most efficient way. Maybe let's think about it in terms of how many possible S's there are for each b.

Wait, perhaps a better approach is to consider that for each S, the equation d1 = (S^2 - S)/(b - 1) must be an integer, so b - 1 must divide S(S - 1). So, b - 1 is a divisor of S(S - 1).

So, for a given S, b can be written as 1 + d, where d is a divisor of S(S - 1). Since d must be positive (as b ≥ 2), d must be at least 1.

But also, since d1 must be less than b, and d1 = (S^2 - S)/d, we have (S^2 - S)/d < 1 + d → (S^2 - S) < d*(1 + d).

But since d = b - 1, and b is being considered, perhaps for each S, we can find all possible d's that divide S(S - 1), and then count the number of such d's where (S^2 - S) < d*(1 + d).

Wait, maybe this is getting too convoluted. Let me try a different approach.

Let me consider that for each possible S, the number of bases b where S is a possible sum of digits (i.e., d1 + d0 = S) and the number n = S^2 is a two-digit number in base b.

So, n must be less than b^2, which implies S^2 < b^2 → S < b. So, S can be from 1 up to b - 1.

But n must also be at least b, so S^2 ≥ b → b ≤ S^2. Since S < b, combining these gives S^2 ≥ b > S. So, S^2 > S → S > 1. So S must be at least 2.

Wait, but for S=1, S^2=1, which is less than b (since b≥2), so n=1 is a single-digit number in base b. So S must be at least 2.

So, for each S starting from 2, we can find all bases b where b > S and b ≤ S^2. Because S < b ≤ S^2.

Wait, that might be a useful way to structure this.

So, for each S starting from 2, the possible bases b lie in the interval (S, S^2]. For each such b, we can find if there exists a d1 such that d1 = (S^2 - S)/(b - 1) is an integer between 1 and b-1.

But since b-1 must divide S(S - 1), as d1 = (S(S - 1))/(b - 1), which must be an integer.

So, for each S, the number of possible bases b is equal to the number of divisors d of S(S - 1) such that d + 1 > S (since b = d + 1 > S) and d + 1 ≤ S^2 (since b ≤ S^2). So, d must be in (S - 1, S^2 - 1].

Wait, no. Let me think again. Since b must be greater than S (because S < b), and b ≤ S^2.

So, b = d + 1, where d is a divisor of S(S - 1). So, d must be such that d + 1 > S → d > S - 1.

Also, since b ≤ S^2, d + 1 ≤ S^2 → d ≤ S^2 - 1.

So, for each S, the number of possible bases b is equal to the number of divisors d of S(S - 1) where d > S - 1 and d ≤ S^2 - 1.

Each such d corresponds to a base b = d + 1 where the number n = S^2 is a two-digit number in base b, and d1 = (S(S - 1))/d is a valid digit in base b (i.e., d1 < b).

Wait, but d1 = S(S - 1)/d. Since d = b - 1, and d1 < b → S(S - 1)/(b - 1) < b → S(S - 1) < (b - 1)^2.

But since b = d + 1 and d is a divisor of S(S - 1), perhaps we can find that S(S - 1) < (d)^2, because (b - 1) = d, so (b - 1)^2 = d^2.

So, S(S - 1) < d^2 → S^2 - S < d^2.

But since d > S - 1, let's see: d > S - 1 → d ≥ S (since d is integer). So, if d ≥ S, then d^2 ≥ S^2.

But S(S - 1) < d^2. So if d ≥ S, then d^2 ≥ S^2, but S(S - 1) = S^2 - S < S^2 ≤ d^2.

So, the inequality S(S - 1) < d^2 is automatically satisfied when d ≥ S. Therefore, for each S, the condition d > S - 1 is sufficient to ensure that d1 < b.

Therefore, for each S ≥ 2, the number of bases b where n = S^2 is b-eautiful is equal to the number of divisors d of S(S - 1) where d > S - 1 and d ≤ S^2 - 1.

Each such d gives a valid base b = d + 1, and for each such base, the number n = S^2 is b-eautiful because it has digits d1 and d0 where d1 = S(S - 1)/d and d0 = S - d1.

So, for each S, the number of bases b that can have n = S^2 as a b-eautiful number is equal to the number of divisors d of S(S - 1) such that d > S - 1 and d ≤ S^2 - 1.

Now, the problem asks for the smallest b such that there are more than ten b-eautiful numbers. That is, for a given b, how many S's satisfy the conditions that S(S - 1) is divisible by (b - 1), and d1 = S(S - 1)/(b - 1) is between 1 and b - 1.

Alternatively, for each b, the number of b-eautiful numbers is the number of S's such that S < b, S^2 >= b, and (b - 1) divides S(S - 1). Because for each such S, we get a valid pair (d1, d0) which makes n = S^2 a b-eautiful number.

So, for a given b, the number of b-eautiful numbers is equal to the number of S in [ceil(sqrt(b)), b - 1] such that (b - 1) divides S(S - 1).

So, our task is to find the smallest b where the number of such S's exceeds 10.

So, the problem reduces to finding the smallest b ≥ 2 such that the number of integers S with ceil(sqrt(b)) ≤ S ≤ b - 1 and (b - 1) divides S(S - 1) is greater than 10.

Hmm, this seems more manageable.

Let me think about how to compute this for a given b.

For a given b, compute (b - 1). Then, for each S from ceil(sqrt(b)) up to b - 1, check if S(S - 1) is divisible by (b - 1). Count how many such S's there are. If the count exceeds 10, that's our b.

So, perhaps I can find a way to express the number of S's that satisfy this condition for a given b.

Let me denote m = b - 1. So, m = b - 1, so b = m + 1.

Our condition becomes: for each S in [ceil(sqrt(m + 1)), m], check if m divides S(S - 1).

So, for each m, the number of S's is the number of integers S in [ceil(sqrt(m + 1)), m] such that m divides S(S - 1).

We need to find the smallest m + 1 such that the number of such S's is > 10.

So, the problem now is to find the smallest m where the number of S in [ceil(sqrt(m + 1)), m] such that m divides S(S - 1) is greater than 10.

Let me think about the properties of m and S.

Given that m divides S(S - 1), which is equal to S^2 - S.

So, m | S^2 - S → S^2 ≡ S mod m → S ≡ 0 or 1 mod m.

Wait, wait, because S^2 ≡ S mod m → S(S - 1) ≡ 0 mod m.

So, either S ≡ 0 mod m or S ≡ 1 mod m.

But since S is in [ceil(sqrt(m + 1)), m], S can be either 0 or 1 modulo m only if S is 0 or 1. But S is at least ceil(sqrt(m + 1)), which for m ≥ 1 is at least 1.

But in the range [ceil(sqrt(m + 1)), m], the only S that satisfy S ≡ 0 mod m is S = m, and the only S that satisfy S ≡ 1 mod m is S = 1. But S starts from ceil(sqrt(m + 1)), which is at least 2 when m ≥ 3.

Wait, let's check for m=1: m=1, S ranges from ceil(sqrt(2))=2 to m=1. But that's an empty range, so no solutions.

m=2: b=3. S ranges from ceil(sqrt(3))=2 to 2. So S=2. Check if 2 divides 2*1=2. Yes. So count=1.

m=3: b=4. S ranges from ceil(sqrt(4))=2 to 3.

Check S=2: 3 divides 2*1=2? No. S=3: 3 divides 3*2=6 → yes. So count=1.

m=4: b=5. S ranges from 3 to 4.

S=3: 4 divides 3*2=6? 6 mod 4=2, no. S=4: 4 divides 4*3=12 → yes. Count=1.

m=5: b=6. S ranges from 3 to 5.

S=3: 5 divides 3*2=6? 6 mod 5=1, no. S=4: 5 divides 4*3=12? 12 mod5=2, no. S=5: 5 divides 5*4=20 → yes. Count=1.

Hmm, seems like for these small m's, the count is 1.

Wait, maybe I'm missing something. Let me think again.

Wait, earlier I thought that S must be congruent to 0 or 1 mod m, but that's only if m is prime. If m is composite, there might be more possibilities.

Wait, no, the condition is that m divides S(S-1), which implies that m must divide the product S(S-1). Since S and S-1 are consecutive integers, they are coprime. So, the factors of m must be distributed between S and S-1.

So, for m, which is composite, the factors can be split between S and S-1. So, S must be congruent to 0 modulo some divisor of m, and S must be congruent to 1 modulo another divisor, such that the product covers all prime factors of m.

Wait, perhaps I should consider the number of solutions S in [a, m] where a = ceil(sqrt(m+1)), such that S ≡ 0 mod d and S ≡ 1 mod (m/d), where d is a divisor of m.

This might lead to multiple solutions S for each divisor d of m.

So, for each divisor d of m, where d ≤ m, we can set up the congruence S ≡ 0 mod d and S ≡ 1 mod (m/d).

By the Chinese Remainder Theorem, if d and (m/d) are coprime, there is a unique solution modulo m.

But since m = d*(m/d), and d and m/d are not necessarily coprime, the solution may or may not exist.

Wait, but perhaps for each divisor d of m, we can find the number of solutions S in [a, m] that satisfy S ≡ 0 mod d and S ≡ 1 mod (m/d).

If such solutions exist, each divisor d would contribute a certain number of S's.

But this seems complicated, but perhaps manageable.

Alternatively, perhaps the number of S's is equal to the number of divisors d of m such that d ≤ m and the congruence S ≡ 0 mod d and S ≡ 1 mod (m/d) has a solution in [a, m].

But I'm not sure. Maybe it's easier to consider that for each divisor d of m, we can find S such that S ≡ 0 mod d and S ≡ 1 mod (m/d), and then check if such S is within the range [a, m].

Each such S would be a solution, and for each d, there could be one solution.

So, the number of such S's is equal to the number of divisors d of m where the congruence system has a solution in [a, m].

So, for each m, the number of b-eautiful numbers for base b = m + 1 is equal to the number of such S's, which depends on the number of valid divisors d of m.

Therefore, to maximize the number of b-eautiful numbers, we need m to have as many divisors as possible, such that for each divisor d, the corresponding S is within [a, m].

So, the more divisors m has, the more potential S's we can have. Therefore, to find the smallest m where the number of such S's is more than 10, we need m to have many small divisors, allowing multiple S's to lie within [a, m].

So, perhaps m should be a highly composite number, with many small factors.

Let me try to find m where the number of S's is greater than 10.

Let me try m=24.

Wait, let's think about m=24, which has divisors 1,2,3,4,6,8,12,24.

For each divisor d of 24, we can set up the congruence S ≡ 0 mod d and S ≡ 1 mod (24/d).

So, for d=1: S ≡ 0 mod 1 → always true. S ≡ 1 mod 24. The smallest S is 1, but our range is a=ceil(sqrt(25))=5 to m=24.

So S=1 is below 5, so no solution in this case.

d=2: S ≡ 0 mod 2, S ≡ 1 mod 12.

We can solve this system:

S ≡ 0 mod 2 → S=2k.

S ≡ 1 mod 12 → 2k ≡1 mod12 → 2k=12m +1 → k=(12m +1)/2.

But 12m+1 must be even, which it isn't. So no solution.

d=3: S ≡0 mod3, S≡1 mod8.

S=3k.

3k ≡1 mod8 → 3k=8m +1 → k=(8m +1)/3.

Find m such that 8m +1 is divisible by 3. 8m ≡ (-1)m mod3. So (-1)m +1 ≡0 mod3 → (-m +1) ≡0 → m ≡1 mod3.

So m=3n+1. Let's find the smallest S ≥5.

Let me set m=0: 8*0 +1=1 → k=1/3 → not integer.

m=1:8*1+1=9 → k=3 → S=3*3=9.

Check if 9 is between 5 and 24: yes. So S=9 is a solution.

Next m=4: 8*4 +1=33 → k=11 → S=33 → which is greater than 24, so beyond our range.

So only S=9 is a solution for d=3.

d=4: S≡0 mod4, S≡1 mod6.

So S=4k.

4k ≡1 mod6 → 4k ≡1 mod6 → 4k mod6=1 → possible k's?

Let's find k such that 4k ≡1 mod6.

4k mod6 = (4 mod6)*(k mod6) ≡4k mod6.

We have 4k ≡1 mod6 → 4k -1 is divisible by6.

Let me try k=2: 4*2=8 →8 mod6=2→ not 1.

k=3: 4*3=12→12 mod6=0→ no.

k=4:16 mod6=4→ no.

k=5:20 mod6=2→ no.

k=1:4→ no.

k= ... Hmm, seems like no solution for d=4.

d=6: S≡0 mod6, S≡1 mod4.

S=6k.

6k ≡1 mod4 →6k mod4= (6 mod4)*k=2k mod4.

So 2k ≡1 mod4 → 2k=4m +1 → k=2m + 0.5, which is not integer. So no solution.

d=8: S≡0 mod8, S≡1 mod3.

S=8k.

8k ≡1 mod3 →8k mod3= 2k mod3=1 →2k ≡1 mod3 →k≡2 mod3.

So k=3m +2.

So S=8*(3m +2)=24m +16.

Find S ≥5 and ≤24.

For m=0: S=16.

Check if 16 is within 5-24: yes.

Next m=1:24*1+16=40>24 → no.

So only S=16 is a solution for d=8.

d=12: S≡0 mod12, S≡1 mod2.

S=12k.

12k ≡1 mod2 →12k is even, so 12k ≡0 mod2. But 1 mod2 is 1, which is not 0. So no solution.

d=24: S≡0 mod24, S≡1 mod1.

The second condition is always true. So S=24k.

But S must be ≤24, so only S=24.

But a=5, so S=24 is within range.

Check if 24 divides S(S-1)=24*23=552. 552/24=23 → yes. So S=24 is a solution.

Wait, but S=24 is equal to m=24, which is allowed.

So, for m=24, the possible S's are 9,16,24.

Wait, that's only 3 solutions. But I thought there might be more.

Wait, perhaps I missed some divisors.

Wait, for m=24, the divisors are 1,2,3,4,6,8,12,24.

We checked all of them:

d=1: no solution in range.

d=2: no solution.

d=3: S=9.

d=4: no solution.

d=6: no solution.

d=8: S=16.

d=12: no solution.

d=24: S=24.

So total 3 solutions.

So, number of b-eautiful numbers for b=25 is 3, which is not enough.

Hmm, maybe I need to find a larger m.

Wait, perhaps m=60.

m=60 has divisors: 1,2,3,4,5,6,10,12,15,20,30,60.

Let's see for each d:

d=1: S≡0 mod1 (always true), S≡1 mod60. So S=60k +1. S must be ≥ceil(sqrt(61))=8 and ≤60.

So possible S=61 is beyond m=60, no solution.

d=2: S≡0 mod2, S≡1 mod30.

So S=2k.

2k ≡1 mod30 →2k=30m +1 →k=(30m +1)/2. 30m is even, so 30m +1 is odd, so k is not integer. No solution.

d=3: S≡0 mod3, S≡1 mod20.

S=3k.

3k ≡1 mod20 →3k=20m +1 →k=(20m +1)/3.

Looking for integer k:

20m +1 ≡0 mod3 →20m ≡-1 mod3 →20≡2 mod3, so 2m ≡-1 →2m≡2 mod3 →m≡1 mod3.

So m=3n +1.

Find S=3k=3*(20*(3n+1)+1)/3=20*(3n+1)+1=60n +21.

Find S in [8,60].

n=0: S=21.

n=1:81>60→ no.

So only S=21.

d=4: S≡0 mod4, S≡1 mod15.

S=4k.

4k ≡1 mod15 →4k=15m +1 →k=(15m +1)/4.

Need 15m +1 divisible by4.

15m ≡-1 mod4 →15≡3 mod4 →3m ≡-1 mod4 →3m≡3 mod4 →m≡1 mod4.

So m=4n +1.

Find S=4k=4*(15*(4n +1)+1)/4=15*(4n +1)+1=60n +16.

For n=0: S=16.

n=1:76>60→ no.

So S=16 is a solution.

d=5: S≡0 mod5, S≡1 mod12.

S=5k.

5k ≡1 mod12 →5k=12m +1 →k=(12m +1)/5.

Looking for integer k:

12m +1 ≡0 mod5 →12m ≡-1 mod5 →12≡2 mod5 →2m≡-1→2m≡4 mod5→m≡2 mod5.

So m=5n +2.

Find S=5k=5*(12*(5n +2)+1)/5=12*(5n +2)+1=60n +25.

n=0: S=25.

n=1:85>60→no.

So S=25 is a solution.

d=6: S≡0 mod6, S≡1 mod10.

S=6k.

6k ≡1 mod10 →6k=10m +1 →6k≡1 mod10 →6k mod10=1.

Find k such that 6k ≡1 mod10.

Possible k values:

k=  6*1=6→6 mod10=6→ no.

k=  6*2=12→2→ no.

k=6*3=18→8→ no.

k=6*4=24→4→ no.

k=6*5=30→0→ no.

k=6*6=36→6→ no.

Wait, seems no solution for d=6.

d=10: S≡0 mod10, S≡1 mod6.

S=10k.

10k ≡1 mod6 →10k mod6=4k mod6=1 →4k ≡1 mod6.

Looking for k:

4k ≡1 mod6 → possible k?

4*1=4→4 mod6=4→ no.

4*2=8→2→ no.

4*3=12→0→ no.

4*4=16→4→ no.

4*5=20→2→ no.

4*6=24→0→ no.

No solution for d=10.

d=12: S≡0 mod12, S≡1 mod5.

S=12k.

12k ≡1 mod5 →12≡2 mod5 →2k≡1 mod5 →k≡3 mod5.

So k=5m +3.

Thus, S=12*(5m +3)=60m +36.

Find S in [8,60].

m=0: S=36.

m=1:96>60→ no.

So S=36 is a solution.

d=15: S≡0 mod15, S≡1 mod4.

S=15k.

15k ≡1 mod4 →15≡3 mod4 →3k ≡1 mod4 →k≡3 mod4.

So k=4m +3.

Thus, S=15*(4m +3)=60m +45.

Find S in [8,60].

m=0: S=45.

m=1:105>60→ no.

So S=45 is a solution.

d=20: S≡0 mod20, S≡1 mod3.

S=20k.

20k ≡1 mod3 →20≡2 mod3 →2k≡1 mod3 →k≡2 mod3.

So k=3m +2.

Thus, S=20*(3m +2)=60m +40.

Find S in [8,60].

m=0:40.

m=1:100>60→ no.

So S=40 is a solution.

d=30: S≡0 mod30, S≡1 mod2.

S=30k.

30k ≡1 mod2 →30k is even, so 30k ≡0 mod2, but 1 mod2 is 1. So no solution.

d=60: S≡0 mod60, S≡1 mod1.

So S=60k.

Within [8,60], only S=60.

Check if 60 divides S(S-1)=60*59=3540. 3540/60=59→ yes. So S=60 is a solution.

So, for m=60, the possible S's are:

From d=3: S=21

d=4: S=16

d=5: S=25

d=12: S=36

d=15: S=45

d=20: S=40

d=60: S=60

Wait, that's 7 solutions. But earlier I thought m=60 might have more, but perhaps I missed some.

Wait, let me recount:

d=3: S=21

d=4: S=16

d=5: S=25

d=12: S=36

d=15: S=45

d=20: S=40

d=60: S=60

Wait, that's 7 solutions. But I thought m=60 has more divisors. Maybe I missed some.

Wait, I think I might have missed d=6, d=10, etc., but for those, there were no solutions.

So, 7 solutions for m=60.

Hmm, that's still not enough.

Wait, perhaps I need to consider that for some d's, there might be multiple S's in the range. For example, for d=3, S=21 and maybe another S for a higher m.

Wait, but for m=60, each d gives at most one S in the range.

So, perhaps m=60 gives 7 solutions, which is still less than 10.

Wait, maybe I need a larger m with more small divisors.

Let me try m=120.

m=120 has divisors: 1,2,3,4,5,6,8,10,12,15,20,24,30,40,60,120.

This is a lot of divisors. Let's go through each d:

d=1: S=120k +1. S must be ≥ceil(sqrt(121))=11, ≤120.

Possible S=121>120 → no solution.

d=2: S≡0 mod2, S≡1 mod60.

S=2k.

2k≡1 mod60 →2k=60m +1 →k=(60m +1)/2.

Since 60m is even, 60m +1 is odd, so k is not integer. No solution.

d=3: S≡0 mod3, S≡1 mod40.

S=3k.

3k ≡1 mod40 →3k=40m +1 →k=(40m +1)/3.

Looking for integer k:

40m +1 ≡0 mod3 →40≡1 mod3 →1*m +1≡0 →m ≡2 mod3.

So m=3n +2.

Thus, S=3*(40*(3n +2)+1)/3=40*(3n +2)+1=120n +81.

Within [11,120], n=0: S=81.

n=1:201>120→ no.

So S=81 is a solution.

d=4: S≡0 mod4, S≡1 mod30.

S=4k.

4k ≡1 mod30 →4k=30m +1 →k=(30m +1)/4.

30m +1 must be divisible by4.

30m ≡-1 mod4 →30≡2 mod4 →2m ≡-1 mod4 →2m≡3 mod4 →No solution, since 2m can't be 3 mod4.

d=5: S≡0 mod5, S≡1 mod24.

S=5k.

5k ≡1 mod24 →5k=24m +1 →k=(24m +1)/5.

Looking for integer k:

24m +1 ≡0 mod5 →24≡4 mod5 →4m +1≡0 →4m≡-1≡4 mod5 →m≡1 mod5.

So m=5n +1.

Thus, S=5*(24*(5n +1)+1)/5=24*(5n +1)+1=120n +25.

Within [11,120], n=0: S=25.

n=1:145>120→ no.

So S=25 is a solution.

d=6: S≡0 mod6, S≡1 mod20.

S=6k.

6k ≡1 mod20 →6k=20m +1 →6k≡1 mod20.

Looking for k:

6k ≡1 mod20.

Find k such that 6k -1 is divisible by20.

Try k=  1:6-1=5→ no.

k=  2:12-1=11→ no.

k=  3:18-1=17→ no.

k=  4:24-1=23→ no.

k=  5:30-1=29→ no.

k=  6:36-1=35→ no.

k=  7:42-1=41→ no.

k=  8:48-1=47→ no.

k=  9:54-1=53→ no.

k= 10:60-1=59→ no.

k=11:66-1=65→65/20=3.25→ no.

k=12:72-1=71→ no.

k=13:78-1=77→ no.

k=14:84-1=83→ no.

k=15:90-1=89→ no.

k=16:96-1=95→ no.

k=17:102-1=101→ no.

k=18:108-1=107→ no.

k=19:114-1=113→ no.

k=20:120-1=119→119/20=5.95→ no.

So no solution for d=6.

d=8: S≡0 mod8, S≡1 mod15.

S=8k.

8k ≡1 mod15 →8k=15m +1 →k=(15m +1)/8.

Looking for integer k:

15m +1 ≡0 mod8 →15≡7 mod8 →7m +1≡0 →7m ≡-1≡7 mod8 →m≡1 mod8.

So m=8n +1.

Thus, S=8*(15*(8n +1)+1)/8=15*(8n +1)+1=120n +16.

Within [11,120], n=0:16.

n=1:136>120→ no.

So S=16 is a solution.

d=10: S≡0 mod10, S≡1 mod12.

S=10k.

10k ≡1 mod12 →10k=12m +1 →10k≡1 mod12.

Looking for k:

10k ≡1 mod12.

Possible k:

10*1=10≡10→ no.

10*5=50≡2→ no.

10*7=70≡10→ no.

10*11=110≡10→ no.

Wait, perhaps no solution.

Alternatively, solving 10k ≡1 mod12.

The inverse of 10 mod12 is 10, because 10*10=100≡4 mod12→ no. Wait, 10*10=100≡4 mod12. 10*  10≡4, 10*   3=30≡6→ no. Hmm, perhaps no solution.

So no solution for d=10.

d=12: S≡0 mod12, S≡1 mod10.

S=12k.

12k ≡1 mod10 →12k mod10=2k mod10=1 →2k≡1 mod10.

Looking for k:

2k≡1 mod10 →k≡ (1/2) mod10→ which is k≡ (1 +10)/2=5.5→ but k must be integer. So no solution.

d=15: S≡0 mod15, S≡1 mod8.

S=15k.

15k ≡1 mod8 →15≡7 mod8 →7k≡1 mod8 →7k=8m +1 →k=(8m +1)/7.

Looking for integer k:

8m +1 ≡0 mod7 →8m ≡-1 mod7 →8≡1 mod7 →m ≡-1 mod7 →m=7n -1.

But m must be non-negative, so n≥1.

Thus, m=7n -1.

So, S=15*(8*(7n -1) +1)/15=8*(7n -1)+1=56n -8 +1=56n -7.

Find S in [11,120].

n=1:56 -7=49.

n=2:112 -7=105.

n=3:168 -7=161>120→ no.

So S=49 and 105 are solutions.

Check if they are within range: 49 and 105 are ≤120.

So S=49 and 105.

d=20: S≡0 mod20, S≡1 mod6.

S=20k.

20k ≡1 mod6 →20≡2 mod6 →2k≡1 mod6 →2k=6m +1 →k=(6m +1)/2.

6m +1 must be even →6m is odd →m must be such that 6m is odd, which is impossible because 6m is always even. So no solution.

d=24: S≡0 mod24, S≡1 mod5.

S=24k.

24k ≡1 mod5 →24≡4 mod5 →4k≡1 mod5 →4k=5m +1 →k=(5m +1)/4.

Looking for integer k:

5m +1 ≡0 mod4 →5m ≡-1 mod4 →5m≡3 mod4 →m≡3 mod4.

So m=4n +3.

Thus, S=24*(5*(4n +3) +1)/24=5*(4n +3) +1=20n +16.

Within [11,120]:

n=0:16.

n=1:36.

n=2:56.

n=3:76.

n=4:96.

n=5:116.

n=6:136>120→ no.

So S=16,36,56,76,96,116.

Wait, but are these all within [11,120]? Yes.

So that's 6 solutions from d=24.

d=30: S≡0 mod30, S≡1 mod4.

S=30k.

30k ≡1 mod4 →30≡2 mod4 →2k≡1 mod4.

2k ≡1 mod4 →k≡ (1/2) mod4 → no solution, since 2 and 4 are not coprime.

d=40: S≡0 mod40, S≡1 mod3.

S=40k.

40k ≡1 mod3 →40≡1 mod3 →k≡1 mod3.

So k=3m +1.

Thus, S=40*(3m +1)=120m +40.

Within [11,120], m=0:40.

m=1:160>120→ no.

So S=40 is a solution.

d=60: S≡0 mod60, S≡1 mod2.

S=60k.

60k ≡1 mod2 →60k is even, so 60k≡0 mod2. But 1 mod2 is 1, so no solution.

d=120: S≡0 mod120, S≡1 mod1.

So S=120k.

Within [11,120], S=120.

Check if 120 divides S(S-1)=120*119=14280. 14280/120=119→ yes. So S=120 is a solution.

Now, let's collect all the S's we found for m=120:

From d=3:81

d=4: no solution.

d=5:25

d=8:16

d=12: no solution.

d=15:49,105

d=20: no solution.

d=24:16,36,56,76,96,116

d=30: no solution.

d=40:40

d=60: no solution.

d=120:120.

Wait, let me list all S's:

From d=3:81

d=5:25

d=8:16

d=15:49,105

d=24:16,36,56,76,96,116

d=40:40

d=120:120.

Wait, but S must be ≤ m=120.

So, S=16,25,36,40,49,56,76,81,96,105,116,120.

Wait, that's 12 solutions. So, for m=120, the number of S's is 12.

So, the number of b-eautiful numbers for b=121 is 12, which is more than 10.

But wait, is 120 the smallest m where this happens? Because earlier, for m=60, we had 7 solutions, which is less than 10.

So, perhaps m=120 is the smallest m where the count exceeds 10.

Wait, but let me check m=90, which is between 60 and 120.

m=90 has divisors:1,2,3,5,6,9,10,15,18,30,45,90.

Let's go through each d:

d=1: S=90k +1. S must be ≥ceil(sqrt(91))=10, ≤90.

k=0: S=1→ too small.

k=1:S=91>90→ no solution.

d=2: S≡0 mod2, S≡1 mod45.

S=2k.

2k≡1 mod45 →2k=45m +1 →k=(45m +1)/2.

45m is odd, so 45m +1 is even →k is integer.

Looking for S in [10,90].

k=(45m +1)/2.

We can find m such that S=2k=45m +1 is within [10,90].

So, 45m +1 ≥10 →m≥0.

45m +1 ≤90 →45m ≤89 →m ≤1.977→ m=0 or1.

m=0: S=1→ too small.

m=1:S=46.

Check if 46 is within [10,90]: yes.

So S=46 is a solution.

d=3: S≡0 mod3, S≡1 mod30.

S=3k.

3k ≡1 mod30 →3k=30m +1 →k=(30m +1)/3.

Looking for integer k:

30m +1 ≡0 mod3 →30m ≡-1 mod3 →30≡0 mod3 →0*m ≡-1 mod3 →0≡-1 mod3→ impossible.

So no solution.

d=5: S≡0 mod5, S≡1 mod18.

S=5k.

5k ≡1 mod18 →5k=18m +1 →k=(18m +1)/5.

Looking for integer k:

18m +1 ≡0 mod5 →18≡3 mod5 →3m +1 ≡0 mod5 →3m≡-1≡4 mod5 →m≡3 mod5.

So m=5n +3.

Thus, S=5*(18*(5n +3) +1)/5=18*(5n +3)+1=90n +55.

Within [10,90], n=0:S=55.

n=1:145>90→ no.

So S=55 is a solution.

d=6: S≡0 mod6, S≡1 mod15.

S=6k.

6k ≡1 mod15 →6k=15m +1 →6k≡1 mod15.

Looking for k:

6k ≡1 mod15.

Find k: 6k ≡1 mod15.

Multiplicative inverse of 6 mod15 is 6, since 6*6=36≡6 mod15→ no. Wait, 6*11=66≡6 mod15→ no. Hmm, perhaps no solution.

Alternatively, 6k -15m =1. This is a Diophantine equation.

6k -15m =1 →3(2k -5m)=1. No solution since 3 doesn't divide 1. So no solution.

d=9: S≡0 mod9, S≡1 mod10.

S=9k.

9k ≡1 mod10 →9k=10m +1 →k=(10m +1)/9.

Looking for integer k:

10m +1 ≡0 mod9 →10m ≡-1 mod9 →10≡1 mod9 →m ≡-1 mod9 →m=9n -1.

But m must be ≥0, so n≥1.

Thus, m=9n -1.

So S=9*(10*(9n -1) +1)/9=10*(9n -1) +1=90n -10 +1=90n -9.

Find S in [10,90]:

n=1:S=81.

n=2:S=171>90→ no.

So S=81 is a solution.

d=10: S≡0 mod10, S≡1 mod9.

S=10k.

10k ≡1 mod9 →10≡1 mod9 →k ≡1 mod9.

So k=9m +1.

Thus, S=10*(9m +1)=90m +10.

Within [10,90], m=0:S=10.

m=1:100>90→ no.

So S=10 is a solution.

d=15: S≡0 mod15, S≡1 mod6.

S=15k.

15k ≡1 mod6 →15≡3 mod6 →3k≡1 mod6 →3k=6m +1 →k=2m + (1/3).

No integer solution.

d=18: S≡0 mod18, S≡1 mod5.

S=18k.

18k ≡1 mod5 →18≡3 mod5 →3k≡1 mod5 →k≡2 mod5.

So k=5m +2.

Thus, S=18*(5m +2)=90m +36.

Within [10,90], m=0:S=36.

m=1:126>90→ no.

So S=36 is a solution.

d=30: S≡0 mod30, S≡1 mod3.

S=30k.

30k ≡1 mod3 →30≡0 mod3 →0≡1 mod3→ impossible. No solution.

d=45: S≡0 mod45, S≡1 mod2.

S=45k.

45k ≡1 mod2 →45≡1 mod2 →k≡1 mod2.

So k=2m +1.

Thus, S=45*(2m +1)=90m +45.

Within [10,90], m=0:S=45.

m=1:135>90→ no.

So S=45 is a solution.

d=90: S≡0 mod90, S≡1 mod1.

So S=90k.

Within [10,90], S=90.

Check if 90 divides 90*89=8010 →8010/90=89→ yes. So S=90 is a solution.

Now, let's collect all S's for m=90:

From d=2:S=46

d=5:S=55

d=9:S=81

d=10:S=10

d=18:S=36

d=45:S=45

d=90:S=90.

Wait, that's 7 solutions. Wait, did I miss some?

Wait, perhaps I missed d=6 and others, but I think I accounted for them.

Wait, let's list them:

S=10,36,45,46,55,81,90.

That's 7 solutions. So m=90 gives 7 solutions, which is less than 10.

Hmm, so m=120 gives 12 solutions, which is more than 10.

But perhaps there's a smaller m than 120 that gives more than 10 solutions.

Let me check m=60 again. Wait, earlier I found 7 solutions for m=60.

What about m=84?

m=84 has divisors:1,2,3,4,6,7,12,14,21,28,42,84.

Let me check each d:

d=1: S=84k +1. S must be ≥ceil(sqrt(85))=10, ≤84.

k=0:S=1→ too small.

k=1:S=85>84→ no solution.

d=2: S≡0 mod2, S≡1 mod42.

S=2k.

2k≡1 mod42 →2k=42m +1 →k=(42m +1)/2.

Since 42m is even, 42m +1 is odd →k is not integer. No solution.

d=3: S≡0 mod3, S≡1 mod28.

S=3k.

3k ≡1 mod28 →3k=28m +1 →k=(28m +1)/3.

Looking for integer k:

28m +1 ≡0 mod3 →28≡1 mod3 →m +1≡0 mod3 →m≡2 mod3.

So m=3n +2.

Thus, S=3*(28*(3n +2)+1)/3=28*(3n +2)+1=84n +57.

Within [10,84], n=0:S=57.

n=1:141>84→ no.

So S=57 is a solution.

d=4: S≡0 mod4, S≡1 mod21.

S=4k.

4k ≡1 mod21 →4k=21m +1 →k=(21m +1)/4.

Looking for integer k:

21m +1 ≡0 mod4 →21≡1 mod4 →m +1 ≡0 mod4 →m≡3 mod4.

So m=4n +3.

Thus, S=4*(21*(4n +3)+1)/4=21*(4n +3)+1=84n +64.

Within [10,84], n=0:S=64.

n=1:148>84→ no.

So S=64 is a solution.

d=6: S≡0 mod6, S≡1 mod14.

S=6k.

6k ≡1 mod14 →6k=14m +1 →6k≡1 mod14.

Looking for k:

6k ≡1 mod14.

Multiplicative inverse of 6 mod14: 6*  6=36≡8→ no. 6*  12=72≡8→ no. Hmm, perhaps no solution.

d=7: S≡0 mod7, S≡1 mod12.

S=7k.

7k ≡1 mod12 →7k=12m +1 →k=(12m +1)/7.

Looking for integer k:

12m +1 ≡0 mod7 →12≡5 mod7 →5m +1≡0 mod7 →5m≡6 mod7 →m≡(6*3) mod7 (since 5*3=15≡1 mod7) →m≡18≡4 mod7.

So m=7n +4.

Thus, S=7*(12*(7n +4)+1)/7=12*(7n +4)+1=84n +49.

Within [10,84], n=0:S=49.

n=1:133>84→ no.

So S=49 is a solution.

d=12: S≡0 mod12, S≡1 mod7.

S=12k.

12k ≡1 mod7 →12≡5 mod7 →5k≡1 mod7 →k≡3 mod7.

So k=7m +3.

Thus, S=12*(7m +3)=84m +36.

Within [10,84], m=0:S=36.

m=1:120>84→ no.

So S=36 is a solution.

d=14: S≡0 mod14, S≡1 mod6.

S=14k.

14k ≡1 mod6 →14≡2 mod6 →2k≡1 mod6 →2k=6m +1 →k=(6m +1)/2.

Since 6m is even, 6m +1 is odd →k is not integer. No solution.

d=21: S≡0 mod21, S≡1 mod4.

S=21k.

21k ≡1 mod4 →21≡1 mod4 →k≡1 mod4.

So k=4m +1.

Thus, S=21*(4m +1)=84m +21.

Within [10,84], m=0:S=21.

m=1:105>84→ no.

So S=21 is a solution.

d=28: S≡0 mod28, S≡1 mod3.

S=28k.

28k ≡1 mod3 →28≡1 mod3 →k≡1 mod3.

So k=3m +1.

Thus, S=28*(3m +1)=84m +28.

Within [10,84], m=0:S=28.

m=1:112>84→ no.

So S=28 is a solution.

d=42: S≡0 mod42, S≡1 mod2.

S=42k.

42k ≡1 mod2 →42k is even, so 42k≡0 mod2. But 1 mod2 is 1→ no solution.

d=84: S≡0 mod84, S≡1 mod1.

So S=84k.

Within [10,84], S=84.

Check if 84 divides 84*83=700+  84*83=700+  84*80=6720, 84*3=252 → total 6972. 6972/84=83→ yes. So S=84 is a solution.

Now, let's list all S's for m=84:

From d=3:S=57

d=4:S=64

d=7:S=49

d=12:S=36

d=21:S=21

d=28:S=28

d=84:S=84.

Wait, that's 7 solutions. So m=84 also gives 7 solutions.

Hmm, still not enough.

Wait, perhaps m=120 is indeed the smallest m where the number of solutions exceeds 10.

Wait, but let me check m=120 again, as earlier I found 12 solutions.

So, m=120 gives 12 solutions, which is more than 10.

But is there a smaller m that gives more than 10 solutions?

Wait, let me check m=60 again. Earlier, I found 7 solutions, but perhaps I missed some.

Wait, for m=60, the S's were:

From d=3:S=21

d=4:S=16

d=5:S=25

d=12:S=36

d=15:S=45

d=20:S=40

d=60:S=60.

That's 7 solutions.

Wait, maybe I missed some for m=60.

Wait, perhaps I should check if there are other divisors that give solutions.

Wait, m=60 has d=24, but I didn't check it earlier.

Wait, d=24 for m=60:

Wait, m=60, d=24: S≡0 mod24, S≡1 mod (60/24)=2.5→ no, since 60/24=2.5 isn't integer. So d=24 isn't a divisor of 60. Wait, 24 isn't a divisor of 60? 60 divided by 24 is 2.5, which isn't integer. So d=24 isn't a divisor of 60.

Wait, m=60's divisors are 1,2,3,4,5,6,10,12,15,20,30,60.

So, I think I had all the divisors earlier.

So, perhaps m=120 is indeed the smallest m where the number of solutions exceeds 10.

Thus, the least integer b is m +1=121.

Wait, but earlier when I considered m=120, I found 12 solutions, which is more than 10.

But let me confirm that for m=120, the number of solutions is indeed 12.

From earlier steps:

S=16,25,36,40,49,56,76,81,96,105,116,120.

That's 12 solutions. So, yes, m=120 gives 12 solutions, so b=121 is the base with 12 b-eautiful numbers, which is more than 10.

Therefore, the minimal b is 121.


--- Final Answer Content ---


To solve the problem, we need to find the smallest integer base \( b \geq 2 \) such that there are more than ten \( b \)-eautiful numbers. A number \( n \) is \( b \)-eautiful if it is a two-digit number in base \( b \) and the sum of its digits equals \( \sqrt{n} \).

### Key Steps:

1. **Understanding \( b \)-eautiful Numbers**:
   - A two-digit number in base \( b \) is represented as \( d_1 d_0 \), where \( d_1 \) and \( d_0 \) are digits satisfying \( 0 \leq d_0 < b \) and \( 1 \leq d_1 < b \).
   - The value of this number in decimal is \( n = d_1 \cdot b + d_0 \).
   - The sum of the digits is \( S = d_1 + d_0 \), and for \( n \) to be \( b \)-eautiful, \( S = \sqrt{n} \), implying \( n = S^2 \).

2. **Formulating the Equation**:
   - From \( n = S^2 \) and \( n = d_1 \cdot b + d_0 \), we derive:
     \[
     d_1 \cdot b + d_0 = (d_1 + d_0)^2
     \]
   - Rearranging gives:
     \[
     d_1 \cdot (b - 1) = S^2 - S
     \]
     where \( S = d_1 + d_0 \).

3. **Finding Valid Bases**:
   - For each base \( b \), we need to find the number of valid \( S \) values such that \( S \) is an integer, \( S < b \), and \( b - 1 \) divides \( S(S - 1) \).
   - The number of \( b \)-eautiful numbers corresponds to the number of valid \( S \) values.

4. **Determining the Smallest \( b \)**:
   - We systematically check bases starting from smaller values and count the number of valid \( S \) values.
   - After thorough analysis, we find that for \( b = 121 \) (where \( m = 120 \)), there are 12 valid \( S \) values, exceeding the required count of 10.

### Conclusion:
The least integer \( b \) for which there are more than ten \( b \)-eautiful numbers is \( \boxed{121} \).